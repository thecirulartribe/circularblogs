# Generated by Django 4.2.16 on 2025-02-24 14:31

from django.db import migrations

def copy_author_to_author_user(apps, schema_editor):
    Blog = apps.get_model('blogs', 'Blog')
    User = apps.get_model('auth', 'User')
    for blog in Blog.objects.all():
        # Here, we assume that the username in User model matches the old author value.
        try:
            user = User.objects.get(username=blog.author)
            blog.author_user = user
        except User.DoesNotExist:
            # If no matching user exists, you might choose to create one or leave it null.
            # For now, we'll leave it as null.
            pass
        blog.save()

def reverse_copy(apps, schema_editor):
    Blog = apps.get_model('blogs', 'Blog')
    for blog in Blog.objects.all():
        if blog.author_user:
            blog.author = blog.author_user.username
        blog.save()

class Migration(migrations.Migration):

    dependencies = [
        ('blogs', '0018_blog_author_user'),
    ]

    operations = [
        migrations.RunPython(copy_author_to_author_user, reverse_copy),
    ]
